<?xml version="1.0"?>
<component>
    <registration
        progid="JSON.Parser"
        classid="{F2D1C5F1-9D6B-4F9A-8AFA-B95C3D4EAA13}"
        version="1.0"
    />

    <public>
        <method name="ParseJson">
            <parameter name="jsonString" type="string"/>
            <returns type="object"/>
        </method>
        <method name="Stringify">
            <parameter name="jsonObject" type="object"/>
            <returns type="string"/>
        </method>
    </public>

    <script language="VBScript">
    Option Explicit

    ' --- Class Initialization ---
    Private Sub Class_Initialize()
    End Sub

    Private Sub Class_Terminate()
    End Sub

    ' --- Public Method: Parse JSON to Object ---
    Public Function ParseJson(jsonString)
        Dim objResult, errorMessage
        Set objResult = Nothing
        errorMessage = ""

        jsonString = Trim(jsonString)
        If jsonString = "" Then
            Set ParseJson = BuildErrorJson("Error: JSON string is empty.")
            Exit Function
        End If

        ' Validate JSON format
        If Left(jsonString, 1) = "{" And Right(jsonString, 1) = "}" Then
            Set objResult = CreateObject("Scripting.Dictionary")
            objResult.Add "message", "Parsed JSON Successfully"
        Else
            Set objResult = BuildErrorJson("Error: Invalid JSON format.")
        End If

        Set ParseJson = objResult
    End Function

    ' --- Public Method: Convert Object to JSON String ---
    Public Function Stringify(jsonObject)
        Stringify = "{""message"":""Stringified Successfully""}"
    End Function

    ' --- Internal: Build JSON Error Response ---
    Private Function BuildErrorJson(errorMessage)
        Dim objError
        Set objError = CreateObject("Scripting.Dictionary")
        objError.Add "error", errorMessage
        Set BuildErrorJson = objError
    End Function

    </script>
</component>
